
(~pair-immutable? (~list->mutable '(1 2 3))) => #f
(~pair-mutable? (~list->mutable '(1 2 3))) => #t

(~pair-immutable? (~list->immutable '(1 2 3))) => #t
(~pair-mutable? (~list->immutable '(1 2 3))) => #f




(define (mutate mutator list . rest)
	(define mutable-list (~list->mutable list))
	(define output (apply mutator mutable-list rest))
	(values mutable-list output))
=> !ignore




(mutate ~list-set-car! '(1 2 3 4) 0 9) => #values((9 2 3 4) 1)
(mutate ~list-set-car! '(1 2 3 4) 1 9) => #values((1 9 3 4) 2)
(mutate ~list-set-car! '(1 2 3 4) 2 9) => #values((1 2 9 4) 3)
(mutate ~list-set-car! '(1 2 3 4) 3 9) => #values((1 2 3 9) 4)




(mutate ~list-fill! '() 9) => #values(() #void)
(mutate ~list-fill! '() 9 0) => #values(() #void)
(mutate ~list-fill! '() 9 0 0) => #values(() #void)


(mutate ~list-fill! '(1 2 3 4) 9) => #values((9 9 9 9) #void)

(mutate ~list-fill! '(1 2 3 4) 9 0) => #values((9 9 9 9) #void)
(mutate ~list-fill! '(1 2 3 4) 9 0 0) => #values((1 2 3 4) #void)
(mutate ~list-fill! '(1 2 3 4) 9 0 1) => #values((9 2 3 4) #void)
(mutate ~list-fill! '(1 2 3 4) 9 0 2) => #values((9 9 3 4) #void)

(mutate ~list-fill! '(1 2 3 4) 9 1) => #values((1 9 9 9) #void)
(mutate ~list-fill! '(1 2 3 4) 9 1 1) => #values((1 2 3 4) #void)
(mutate ~list-fill! '(1 2 3 4) 9 1 2) => #values((1 9 3 4) #void)
(mutate ~list-fill! '(1 2 3 4) 9 1 3) => #values((1 9 9 4) #void)

(mutate ~list-fill! '(1 2 3 4) 9 3) => #values((1 2 3 9) #void)
(mutate ~list-fill! '(1 2 3 4) 9 3 3) => #values((1 2 3 4) #void)
(mutate ~list-fill! '(1 2 3 4) 9 3 4) => #values((1 2 3 9) #void)

(mutate ~list-fill! '(1 2 3 4) 9 4) => #values((1 2 3 4) #void)
(mutate ~list-fill! '(1 2 3 4) 9 4 4) => #values((1 2 3 4) #void)




(mutate ~list-reverse! '()) => #values(() #void)
(mutate ~list-reverse! '() 0) => #values(() #void)
(mutate ~list-reverse! '() 0 0) => #values(() #void)


(mutate ~list-reverse! '(1 2 3 4)) => #values((4 3 2 1) #void)

(mutate ~list-reverse! '(1 2 3 4) 0) => #values((4 3 2 1) #void)
(mutate ~list-reverse! '(1 2 3 4) 0 0) => #values((1 2 3 4) #void)
(mutate ~list-reverse! '(1 2 3 4) 0 1) => #values((1 2 3 4) #void)
(mutate ~list-reverse! '(1 2 3 4) 0 2) => #values((2 1 3 4) #void)

(mutate ~list-reverse! '(1 2 3 4) 1) => #values((1 4 3 2) #void)
(mutate ~list-reverse! '(1 2 3 4) 1 1) => #values((1 2 3 4) #void)
(mutate ~list-reverse! '(1 2 3 4) 1 2) => #values((1 2 3 4) #void)
(mutate ~list-reverse! '(1 2 3 4) 1 3) => #values((1 3 2 4) #void)

(mutate ~list-reverse! '(1 2 3 4) 3) => #values((1 2 3 4) #void)
(mutate ~list-reverse! '(1 2 3 4) 3 3) => #values((1 2 3 4) #void)
(mutate ~list-reverse! '(1 2 3 4) 3 4) => #values((1 2 3 4) #void)

(mutate ~list-reverse! '(1 2 3 4) 4) => #values((1 2 3 4) #void)
(mutate ~list-reverse! '(1 2 3 4) 4 4) => #values((1 2 3 4) #void)


(mutate ~list-reverse! '(1 2 3 4 5)) => #values((5 4 3 2 1) #void)

(mutate ~list-reverse! '(1 2 3 4 5) 0) => #values((5 4 3 2 1) #void)
(mutate ~list-reverse! '(1 2 3 4 5) 0 0) => #values((1 2 3 4 5) #void)
(mutate ~list-reverse! '(1 2 3 4 5) 0 1) => #values((1 2 3 4 5) #void)
(mutate ~list-reverse! '(1 2 3 4 5) 0 2) => #values((2 1 3 4 5) #void)

(mutate ~list-reverse! '(1 2 3 4 5) 1) => #values((1 5 4 3 2) #void)
(mutate ~list-reverse! '(1 2 3 4 5) 1 1) => #values((1 2 3 4 5) #void)
(mutate ~list-reverse! '(1 2 3 4 5) 1 2) => #values((1 2 3 4 5) #void)
(mutate ~list-reverse! '(1 2 3 4 5) 1 3) => #values((1 3 2 4 5) #void)

(mutate ~list-reverse! '(1 2 3 4 5) 3) => #values((1 2 3 5 4) #void)
(mutate ~list-reverse! '(1 2 3 4 5) 3 3) => #values((1 2 3 4 5) #void)
(mutate ~list-reverse! '(1 2 3 4 5) 3 4) => #values((1 2 3 4 5) #void)

(mutate ~list-reverse! '(1 2 3 4 5) 4) => #values((1 2 3 4 5) #void)
(mutate ~list-reverse! '(1 2 3 4 5) 4 4) => #values((1 2 3 4 5) #void)




(mutate ~list-copy! '() '()) => #values(() #void)
(mutate ~list-copy! '() 0 '()) => #values(() #void)
(mutate ~list-copy! '() 0 '() 0) => #values(() #void)
(mutate ~list-copy! '() 0 '() 0 0) => #values(() #void)

(mutate ~list-copy! '(1 2 3 4) '()) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '()) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '() 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '() 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '()) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '() 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '() 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 4 '()) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 4 '() 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 4 '() 0 0) => #values((1 2 3 4) #void)

(mutate ~list-copy! '(1 2 3 4) '(-1)) => #values((-1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1)) => #values((-1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1) 0) => #values((-1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1) 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1) 0 1) => #values((-1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1) 1 1) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1)) => #values((1 -1 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1) 0) => #values((1 -1 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1) 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1) 0 1) => #values((1 -1 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1) 1 1) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 3 '(-1)) => #values((1 2 3 -1) #void)
(mutate ~list-copy! '(1 2 3 4) 3 '(-1) 0) => #values((1 2 3 -1) #void)
(mutate ~list-copy! '(1 2 3 4) 3 '(-1) 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 3 '(-1) 0 1) => #values((1 2 3 -1) #void)
(mutate ~list-copy! '(1 2 3 4) 3 '(-1) 1 1) => #values((1 2 3 4) #void)

(mutate ~list-copy! '(1 2 3 4) '(-1 -2)) => #values((-1 -2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1 -2)) => #values((-1 -2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1 -2) 0) => #values((-1 -2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1 -2) 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1 -2) 0 1) => #values((-1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1 -2)) => #values((1 -1 -2 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1 -2) 0) => #values((1 -1 -2 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1 -2) 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1 -2) 0 1) => #values((1 -1 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 2 '(-1 -2)) => #values((1 2 -1 -2) #void)
(mutate ~list-copy! '(1 2 3 4) 2 '(-1 -2) 0) => #values((1 2 -1 -2) #void)
(mutate ~list-copy! '(1 2 3 4) 2 '(-1 -2) 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 2 '(-1 -2) 0 1) => #values((1 2 -1 4) #void)
(mutate ~list-copy! '(1 2 3 4) 3 '(-1 -2) 0 1) => #values((1 2 3 -1) #void)

(mutate ~list-copy! '(1 2 3 4) '(-1 -2 -3 -4)) => #values((-1 -2 -3 -4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1 -2 -3 -4)) => #values((-1 -2 -3 -4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1 -2 -3 -4) 0) => #values((-1 -2 -3 -4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1 -2 -3 -4) 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 0 '(-1 -2 -3 -4) 0 2) => #values((-1 -2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1 -2 -3 -4) 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 1 '(-1 -2 -3 -4) 0 2) => #values((1 -1 -2 4) #void)
(mutate ~list-copy! '(1 2 3 4) 2 '(-1 -2 -3 -4) 0 0) => #values((1 2 3 4) #void)
(mutate ~list-copy! '(1 2 3 4) 2 '(-1 -2 -3 -4) 0 2) => #values((1 2 -1 -2) #void)
(mutate ~list-copy! '(1 2 3 4) 3 '(-1 -2 -3 -4) 0 1) => #values((1 2 3 -1) #void)

