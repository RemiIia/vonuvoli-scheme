
(bytevector) => #u8()

(bytevector 0) => #u8(0)
(bytevector 0 1) => #u8(0 1)
(bytevector 0 1 2) => #u8(0 1 2)
(bytevector 0 1 2 3) => #u8(0 1 2 3)
(bytevector 0 1 2 3 4) => #u8(0 1 2 3 4)
(bytevector 0 1 2 3 4 5) => #u8(0 1 2 3 4 5)
(bytevector 0 1 2 3 4 5 6) => #u8(0 1 2 3 4 5 6)




(make-bytevector 0) => #u8()
(make-bytevector 1) => #u8(0)
(make-bytevector 2) => #u8(0 0)
(make-bytevector 3) => #u8(0 0 0)

(make-bytevector 0 0) => #u8()
(make-bytevector 1 0) => #u8(0)
(make-bytevector 2 0) => #u8(0 0)
(make-bytevector 3 0) => #u8(0 0 0)




(make-bytevector 2 0 #t) => #u8(0 0)
(~bytevector-immutable? (make-bytevector 2 0 #t)) => #t
(~bytevector-immutable? (make-bytevector 2 0 #f)) => #f

(make-bytevector 2 0 #f) => #u8(0 0)
(~bytevector-mutable? (make-bytevector 2 0 #t)) => #f
(~bytevector-mutable? (make-bytevector 2 0 #f)) => #t




(bytevector-copy #u8()) => #u8()
(bytevector-copy #u8() 0) => #u8()
(bytevector-copy #u8() 0 0) => #u8()

(bytevector-copy #u8(0)) => #u8(0)
(bytevector-copy #u8(0 1)) => #u8(0 1)
(bytevector-copy #u8(0 1 2)) => #u8(0 1 2)

(bytevector-copy #u8(0 1 2 3 4 5) 0) => #u8(0 1 2 3 4 5)
(bytevector-copy #u8(0 1 2 3 4 5) 2) => #u8(2 3 4 5)
(bytevector-copy #u8(0 1 2 3 4 5) 5) => #u8(5)
(bytevector-copy #u8(0 1 2 3 4 5) 6) => #u8()

(bytevector-copy #u8(0 1 2 3 4 5) 0 6) => #u8(0 1 2 3 4 5)
(bytevector-copy #u8(0 1 2 3 4 5) 2 5) => #u8(2 3 4)
(bytevector-copy #u8(0 1 2 3 4 5) 2 6) => #u8(2 3 4 5)
(bytevector-copy #u8(0 1 2 3 4 5) 5 6) => #u8(5)
(bytevector-copy #u8(0 1 2 3 4 5) 6 6) => #u8()




(~bytevector->vector #u8()) => #()
(~bytevector->vector #u8() 0) => #()
(~bytevector->vector #u8() 0 0) => #()

(~bytevector->vector #u8(0)) => #(0)
(~bytevector->vector #u8(0 1)) => #(0 1)
(~bytevector->vector #u8(0 1 2)) => #(0 1 2)

(~bytevector->vector #u8(0 1 2 3 4 5) 0) => #(0 1 2 3 4 5)
(~bytevector->vector #u8(0 1 2 3 4 5) 2) => #(2 3 4 5)
(~bytevector->vector #u8(0 1 2 3 4 5) 5) => #(5)
(~bytevector->vector #u8(0 1 2 3 4 5) 6) => #()

(~bytevector->vector #u8(0 1 2 3 4 5) 0 6) => #(0 1 2 3 4 5)
(~bytevector->vector #u8(0 1 2 3 4 5) 2 5) => #(2 3 4)
(~bytevector->vector #u8(0 1 2 3 4 5) 2 6) => #(2 3 4 5)
(~bytevector->vector #u8(0 1 2 3 4 5) 5 6) => #(5)
(~bytevector->vector #u8(0 1 2 3 4 5) 6 6) => #()


(~vector->bytevector #()) => #u8()
(~vector->bytevector #() 0) => #u8()
(~vector->bytevector #() 0 0) => #u8()

(~vector->bytevector #(0)) => #u8(0)
(~vector->bytevector #(0 1)) => #u8(0 1)
(~vector->bytevector #(0 1 2)) => #u8(0 1 2)

(~vector->bytevector #(0 1 2 3 4 5) 0) => #u8(0 1 2 3 4 5)
(~vector->bytevector #(0 1 2 3 4 5) 2) => #u8(2 3 4 5)
(~vector->bytevector #(0 1 2 3 4 5) 5) => #u8(5)
(~vector->bytevector #(0 1 2 3 4 5) 6) => #u8()

(~vector->bytevector #(0 1 2 3 4 5) 0 6) => #u8(0 1 2 3 4 5)
(~vector->bytevector #(0 1 2 3 4 5) 2 5) => #u8(2 3 4)
(~vector->bytevector #(0 1 2 3 4 5) 2 6) => #u8(2 3 4 5)
(~vector->bytevector #(0 1 2 3 4 5) 5 6) => #u8(5)
(~vector->bytevector #(0 1 2 3 4 5) 6 6) => #u8()




(~bytevector->list #u8()) => '()
(~bytevector->list #u8() 0) => '()
(~bytevector->list #u8() 0 0) => '()

(~bytevector->list #u8(0)) => '(0)
(~bytevector->list #u8(0 1)) => '(0 1)
(~bytevector->list #u8(0 1 2)) => '(0 1 2)

(~bytevector->list #u8(0 1 2 3 4 5) 0) => '(0 1 2 3 4 5)
(~bytevector->list #u8(0 1 2 3 4 5) 2) => '(2 3 4 5)
(~bytevector->list #u8(0 1 2 3 4 5) 5) => '(5)
(~bytevector->list #u8(0 1 2 3 4 5) 6) => '()

(~bytevector->list #u8(0 1 2 3 4 5) 0 6) => '(0 1 2 3 4 5)
(~bytevector->list #u8(0 1 2 3 4 5) 2 5) => '(2 3 4)
(~bytevector->list #u8(0 1 2 3 4 5) 2 6) => '(2 3 4 5)
(~bytevector->list #u8(0 1 2 3 4 5) 5 6) => '(5)
(~bytevector->list #u8(0 1 2 3 4 5) 6 6) => '()


(~list->bytevector '()) => #u8()
(~list->bytevector '() 0) => #u8()
(~list->bytevector '() 0 0) => #u8()

(~list->bytevector '(0)) => #u8(0)
(~list->bytevector '(0 1)) => #u8(0 1)
(~list->bytevector '(0 1 2)) => #u8(0 1 2)

(~list->bytevector '(0 1 2 3 4 5) 0) => #u8(0 1 2 3 4 5)
(~list->bytevector '(0 1 2 3 4 5) 2) => #u8(2 3 4 5)
(~list->bytevector '(0 1 2 3 4 5) 5) => #u8(5)
(~list->bytevector '(0 1 2 3 4 5) 6) => #u8()

(~list->bytevector '(0 1 2 3 4 5) 0 6) => #u8(0 1 2 3 4 5)
(~list->bytevector '(0 1 2 3 4 5) 2 5) => #u8(2 3 4)
(~list->bytevector '(0 1 2 3 4 5) 2 6) => #u8(2 3 4 5)
(~list->bytevector '(0 1 2 3 4 5) 5 6) => #u8(5)
(~list->bytevector '(0 1 2 3 4 5) 6 6) => #u8()




(bytevector-length #u8()) => 0

(bytevector-length #u8(0)) => 1
(bytevector-length #u8(0 1)) => 2
(bytevector-length #u8(0 1 2)) => 3




(bytevector-append) => #u8()
(bytevector-append #u8()) => #u8()
(bytevector-append #u8() #u8()) => #u8()
(bytevector-append #u8() #u8() #u8()) => #u8()
(bytevector-append #u8() #u8() #u8() #u8()) => #u8()
(bytevector-append #u8() #u8() #u8() #u8() #u8()) => #u8()

(bytevector-append #u8(0)) => #u8(0)
(bytevector-append #u8() #u8(0)) => #u8(0)
(bytevector-append #u8() #u8() #u8(0)) => #u8(0)

(bytevector-append #u8(0 1)) => #u8(0 1)
(bytevector-append #u8(0) #u8(1)) => #u8(0 1)

(bytevector-append #u8(0 1)) => #u8(0 1)
(bytevector-append #u8(0) #u8(1)) => #u8(0 1)

(bytevector-append #u8(0 1 2)) => #u8(0 1 2)
(bytevector-append #u8(0 1) #u8(2)) => #u8(0 1 2)
(bytevector-append #u8(0) #u8(1) #u8(2)) => #u8(0 1 2)

(bytevector-append #u8(0 1 2)) => #u8(0 1 2)
(bytevector-append #u8(0 1) #u8(2)) => #u8(0 1 2)
(bytevector-append #u8(0) #u8(1) #u8(2)) => #u8(0 1 2)

(bytevector-append #u8(0)) => #u8(0)
(bytevector-append #u8(0) #u8(1)) => #u8(0 1)
(bytevector-append #u8(0) #u8(1) #u8(2)) => #u8(0 1 2)
(bytevector-append #u8(0) #u8(1) #u8(2) #u8(3)) => #u8(0 1 2 3)
(bytevector-append #u8(0) #u8(1) #u8(2) #u8(3) #u8(4)) => #u8(0 1 2 3 4)
(bytevector-append #u8(0) #u8(1) #u8(2) #u8(3) #u8(4) #u8(5)) => #u8(0 1 2 3 4 5)
(bytevector-append #u8(0) #u8(1) #u8(2) #u8(3) #u8(4) #u8(5) #u8(6)) => #u8(0 1 2 3 4 5 6)




(~bytevector-reverse #u8()) => #u8()
(~bytevector-reverse #u8(0)) => #u8(0)
(~bytevector-reverse #u8(0 1)) => #u8(1 0)
(~bytevector-reverse #u8(0 1 2)) => #u8(2 1 0)
(~bytevector-reverse #u8(0 1 2 3)) => #u8(3 2 1 0)




(bytevector-u8-ref #u8(0) 0) => 0
(bytevector-u8-ref #u8(0 1) 1) => 1
(bytevector-u8-ref #u8(0 1 2) 2) => 2




(~bytevector->immutable #u8()) => #u8()
(~bytevector->mutable #u8()) => #u8()

(~bytevector->immutable #u8(0)) => #u8(0)
(~bytevector->mutable #u8(0)) => #u8(0)

(~bytevector->immutable #u8(0 1)) => #u8(0 1)
(~bytevector->mutable #u8(0 1)) => #u8(0 1)

(~bytevector->immutable #u8(0 1 2)) => #u8(0 1 2)
(~bytevector->mutable #u8(0 1 2)) => #u8(0 1 2)


(~bytevector->immutable (~bytevector->mutable #u8())) => #u8()
(~bytevector->mutable (~bytevector->immutable #u8())) => #u8()

(~bytevector->immutable (~bytevector->mutable #u8(0 1 2))) => #u8(0 1 2)
(~bytevector->mutable (~bytevector->immutable #u8(0 1 2))) => #u8(0 1 2)

(~bytevector->immutable (~bytevector->immutable #u8())) => #u8()
(~bytevector->mutable (~bytevector->mutable #u8())) => #u8()

(~bytevector->immutable (~bytevector->immutable #u8(0 1 2))) => #u8(0 1 2)
(~bytevector->mutable (~bytevector->mutable #u8(0 1 2))) => #u8(0 1 2)


(~bytevector->immutable #u8()) => (~bytevector->mutable #u8())
(~bytevector->mutable #u8()) => (~bytevector->immutable #u8())

(~bytevector->immutable #u8(0 1 2)) => (~bytevector->mutable #u8(0 1 2))
(~bytevector->mutable #u8(0 1 2)) => (~bytevector->immutable #u8(0 1 2))




(bytevector? (~bytevector->immutable #u8())) => #t
(~bytevector-immutable? (~bytevector->immutable #u8())) => #t
(~bytevector-mutable? (~bytevector->immutable #u8())) => #f

(bytevector? (~bytevector->mutable #u8())) => #t
(~bytevector-immutable? (~bytevector->mutable #u8())) => #f
(~bytevector-mutable? (~bytevector->mutable #u8())) => #t


(bytevector? (~bytevector->immutable (~bytevector->mutable #u8()))) => #t
(~bytevector-immutable? (~bytevector->immutable (~bytevector->mutable #u8()))) => #t
(~bytevector-mutable? (~bytevector->immutable (~bytevector->mutable #u8()))) => #f

(bytevector? (~bytevector->mutable (~bytevector->immutable #u8()))) => #t
(~bytevector-immutable? (~bytevector->mutable (~bytevector->immutable #u8()))) => #f
(~bytevector-mutable? (~bytevector->mutable (~bytevector->immutable #u8()))) => #t


(bytevector? (~bytevector->immutable (~bytevector->immutable #u8()))) => #t
(~bytevector-immutable? (~bytevector->immutable (~bytevector->immutable #u8()))) => #t
(~bytevector-mutable? (~bytevector->immutable (~bytevector->immutable #u8()))) => #f

(bytevector? (~bytevector->mutable (~bytevector->mutable #u8()))) => #t
(~bytevector-immutable? (~bytevector->mutable (~bytevector->mutable #u8()))) => #f
(~bytevector-mutable? (~bytevector->mutable (~bytevector->mutable #u8()))) => #t




(define a (~bytevector->mutable #u8(10 11 12 13 14 15))) => #u8(10 11 12 13 14 15)
(define e (~bytevector->mutable #u8())) => #u8()
(define t (~bytevector->mutable #u8(0 0 0 0 0 0))) => #u8(0 0 0 0 0 0)
(define s #u8(0 1 2 3 4 5)) => #u8(0 1 2 3 4 5)




(bytevector-u8-ref a 0) => 10
(bytevector-u8-ref a 1) => 11
(bytevector-u8-ref a 2) => 12

(bytevector-u8-set! a 0 20) => 10
(bytevector-u8-set! a 1 21) => 11
(bytevector-u8-set! a 2 22) => 12

(bytevector-u8-ref a 0) => 20
(bytevector-u8-ref a 1) => 21
(bytevector-u8-ref a 2) => 22

(bytevector-u8-set! a 0 10) => 20
(bytevector-u8-set! a 1 11) => 21
(bytevector-u8-set! a 2 12) => 22




(values (~bytevector-reverse! a) a) => #values(#void #u8(15 14 13 12 11 10))
(values (~bytevector-reverse! a 2) a) => #values(#void #u8(15 14 10 11 12 13))
(values (~bytevector-reverse! a 1 3) a) => #values(#void #u8(15 10 14 11 12 13))
(values (~bytevector-reverse! a 2 6) a) => #values(#void #u8(15 10 13 12 11 14))




(values (~bytevector-u8-fill! a 0 1 3) a) => #values(#void #u8(15 0 0 12 11 14))
(values (~bytevector-u8-fill! a 0 4) a) => #values(#void #u8(15 0 0 12 0 0))
(values (~bytevector-u8-fill! a 1) a) => #values(#void #u8(1 1 1 1 1 1))
(values (~bytevector-u8-fill! a) a) => #values(#void #u8(0 0 0 0 0 0))




(values (bytevector-copy! e 0 #u8()) e) => #values(#void #u8())
(values (bytevector-copy! e 0 #u8() 0) e) => #values(#void #u8())
(values (bytevector-copy! e 0 #u8() 0 0) e) => #values(#void #u8())

(values (bytevector-copy! t s) t) => #values(#void #u8(0 1 2 3 4 5))
(values (~bytevector-u8-fill! t 0) t) => #values(#void #u8(0 0 0 0 0 0))

(values (bytevector-copy! t 6 s 6) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 5 s 5) t) => #values(#void #u8(0 0 0 0 0 5))
(values (bytevector-copy! t 2 s 2) t) => #values(#void #u8(0 0 2 3 4 5))
(values (bytevector-copy! t 0 s 0) t) => #values(#void #u8(0 1 2 3 4 5))
(values (~bytevector-u8-fill! t 0) t) => #values(#void #u8(0 0 0 0 0 0))

(values (bytevector-copy! t 5 s 1 2) t) => #values(#void #u8(0 0 0 0 0 1))
(values (bytevector-copy! t 2 s 1 4) t) => #values(#void #u8(0 0 1 2 3 1))
(values (~bytevector-u8-fill! t 0) t) => #values(#void #u8(0 0 0 0 0 0))

(values (bytevector-copy! t 0 s 0 0) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 0 s 1 1) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 0 s 5 5) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 0 s 6 6) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 1 s 0 0) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 1 s 1 1) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 1 s 5 5) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 1 s 6 6) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 5 s 0 0) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 5 s 1 1) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 5 s 5 5) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 5 s 6 6) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 6 s 0 0) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 6 s 1 1) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 6 s 5 5) t) => #values(#void #u8(0 0 0 0 0 0))
(values (bytevector-copy! t 6 s 6 6) t) => #values(#void #u8(0 0 0 0 0 0))
(values (~bytevector-u8-fill! t 0) t) => #values(#void #u8(0 0 0 0 0 0))

