
(vector) => #()

(vector 0) => #(0)
(vector 0 1) => #(0 1)
(vector 0 1 2) => #(0 1 2)
(vector 0 1 2 3) => #(0 1 2 3)
(vector 0 1 2 3 4) => #(0 1 2 3 4)
(vector 0 1 2 3 4 5) => #(0 1 2 3 4 5)
(vector 0 1 2 3 4 5 6) => #(0 1 2 3 4 5 6)

(vector '(0) 1 2) => #((0) 1 2)
(vector 0 1 '(2)) => #(0 1 (2))
(vector '(0) '(1) '(2)) => #((0) (1) (2))
(vector '(0 1 2)) => #((0 1 2))




(make-vector 0) => #()
(make-vector 1) => #(#undefined)
(make-vector 2) => #(#undefined #undefined)
(make-vector 3) => #(#undefined #undefined #undefined)

(make-vector 0 0) => #()
(make-vector 1 0) => #(0)
(make-vector 2 0) => #(0 0)
(make-vector 3 0) => #(0 0 0)




(vector-copy #()) => #()
(vector-copy #() 0) => #()
(vector-copy #() 0 0) => #()

(vector-copy #(0)) => #(0)
(vector-copy #(0 1)) => #(0 1)
(vector-copy #(0 1 2)) => #(0 1 2)
(vector-copy #((0) 1 2)) => #((0) 1 2)
(vector-copy #(0 1 (2))) => #(0 1 (2))
(vector-copy #((0) (1) (2))) => #((0) (1) (2))
(vector-copy #((0 1 2))) => #((0 1 2))

(vector-copy #(0 1 2 3 4 5) 0) => #(0 1 2 3 4 5)
(vector-copy #(0 1 2 3 4 5) 2) => #(2 3 4 5)
(vector-copy #(0 1 2 3 4 5) 5) => #(5)
(vector-copy #(0 1 2 3 4 5) 6) => #()

(vector-copy #(0 1 2 3 4 5) 0 6) => #(0 1 2 3 4 5)
(vector-copy #(0 1 2 3 4 5) 2 5) => #(2 3 4)
(vector-copy #(0 1 2 3 4 5) 2 6) => #(2 3 4 5)
(vector-copy #(0 1 2 3 4 5) 5 6) => #(5)
(vector-copy #(0 1 2 3 4 5) 6 6) => #()




(vector->list #()) => '()
(vector->list #() 0) => '()
(vector->list #() 0 0) => '()

(vector->list #(0 1 2 3 4 5) 0) => '(0 1 2 3 4 5)
(vector->list #(0 1 2 3 4 5) 2) => '(2 3 4 5)
(vector->list #(0 1 2 3 4 5) 5) => '(5)
(vector->list #(0 1 2 3 4 5) 6) => '()

(vector->list #(0 1 2 3 4 5) 0 6) => '(0 1 2 3 4 5)
(vector->list #(0 1 2 3 4 5) 2 5) => '(2 3 4)
(vector->list #(0 1 2 3 4 5) 2 6) => '(2 3 4 5)
(vector->list #(0 1 2 3 4 5) 5 6) => '(5)
(vector->list #(0 1 2 3 4 5) 6 6) => '()


(list->vector '()) => #()
(list->vector '() 0) => #()
(list->vector '() 0 0) => #()

(list->vector '(0 1 2 3 4 5) 0) => #(0 1 2 3 4 5)
(list->vector '(0 1 2 3 4 5) 2) => #(2 3 4 5)
(list->vector '(0 1 2 3 4 5) 5) => #(5)
(list->vector '(0 1 2 3 4 5) 6) => #()

(list->vector '(0 1 2 3 4 5) 0 6) => #(0 1 2 3 4 5)
(list->vector '(0 1 2 3 4 5) 2 5) => #(2 3 4)
(list->vector '(0 1 2 3 4 5) 2 6) => #(2 3 4 5)
(list->vector '(0 1 2 3 4 5) 5 6) => #(5)
(list->vector '(0 1 2 3 4 5) 6 6) => #()




(vector-length #()) => 0

(vector-length #(0)) => 1
(vector-length #(0 1)) => 2
(vector-length #(0 1 2)) => 3
(vector-length #((0) 1 2)) => 3
(vector-length #(0 1 (2))) => 3
(vector-length #((0) (1) (2))) => 3
(vector-length #((0 1 2))) => 1




(vector-append) => #()
(vector-append #()) => #()
(vector-append #() #()) => #()
(vector-append #() #() #()) => #()
(vector-append #() #() #() #()) => #()
(vector-append #() #() #() #() #()) => #()

(vector-append #(0)) => #(0)
(vector-append #() #(0)) => #(0)
(vector-append #() #() #(0)) => #(0)

(vector-append #(0 1)) => #(0 1)
(vector-append #(0) #(1)) => #(0 1)

(vector-append #(0 1)) => #(0 1)
(vector-append #(0) #(1)) => #(0 1)

(vector-append #(0 1 2)) => #(0 1 2)
(vector-append #(0 1) #(2)) => #(0 1 2)
(vector-append #(0) #(1) #(2)) => #(0 1 2)

(vector-append #(0 1 2)) => #(0 1 2)
(vector-append #(0 1) #(2)) => #(0 1 2)
(vector-append #(0) #(1) #(2)) => #(0 1 2)

(vector-append #(0)) => #(0)
(vector-append #(0) #(1)) => #(0 1)
(vector-append #(0) #(1) #(2)) => #(0 1 2)
(vector-append #(0) #(1) #(2) #(3)) => #(0 1 2 3)
(vector-append #(0) #(1) #(2) #(3) #(4)) => #(0 1 2 3 4)
(vector-append #(0) #(1) #(2) #(3) #(4) #(5)) => #(0 1 2 3 4 5)
(vector-append #(0) #(1) #(2) #(3) #(4) #(5) #(6)) => #(0 1 2 3 4 5 6)




(~vector-reverse #()) => #()
(~vector-reverse #(0)) => #(0)
(~vector-reverse #(0 1)) => #(1 0)
(~vector-reverse #(0 1 2)) => #(2 1 0)
(~vector-reverse #(0 1 2 3)) => #(3 2 1 0)




(vector-ref #(a) 0) => 'a
(vector-ref #(a b) 1) => 'b
(vector-ref #(a b c) 2) => 'c




(~vector->immutable #()) => #()
(~vector->mutable #()) => #()

(~vector->immutable #(0)) => #(0)
(~vector->mutable #(0)) => #(0)

(~vector->immutable #(0 1)) => #(0 1)
(~vector->mutable #(0 1)) => #(0 1)

(~vector->immutable #(0 1 2)) => #(0 1 2)
(~vector->mutable #(0 1 2)) => #(0 1 2)


(~vector->immutable (~vector->mutable #())) => #()
(~vector->mutable (~vector->immutable #())) => #()

(~vector->immutable (~vector->mutable #(0 1 2))) => #(0 1 2)
(~vector->mutable (~vector->immutable #(0 1 2))) => #(0 1 2)

(~vector->immutable (~vector->immutable #())) => #()
(~vector->mutable (~vector->mutable #())) => #()

(~vector->immutable (~vector->immutable #(0 1 2))) => #(0 1 2)
(~vector->mutable (~vector->mutable #(0 1 2))) => #(0 1 2)


(~vector->immutable #()) => (~vector->mutable #())
(~vector->mutable #()) => (~vector->immutable #())

(~vector->immutable #(0 1 2)) => (~vector->mutable #(0 1 2))
(~vector->mutable #(0 1 2)) => (~vector->immutable #(0 1 2))




(vector? (~vector->immutable #())) => #t
(~vector-immutable? (~vector->immutable #())) => #t
(~vector-mutable? (~vector->immutable #())) => #f

(vector? (~vector->mutable #())) => #t
(~vector-immutable? (~vector->mutable #())) => #f
(~vector-mutable? (~vector->mutable #())) => #t


(vector? (~vector->immutable (~vector->mutable #()))) => #t
(~vector-immutable? (~vector->immutable (~vector->mutable #()))) => #t
(~vector-mutable? (~vector->immutable (~vector->mutable #()))) => #f

(vector? (~vector->mutable (~vector->immutable #()))) => #t
(~vector-immutable? (~vector->mutable (~vector->immutable #()))) => #f
(~vector-mutable? (~vector->mutable (~vector->immutable #()))) => #t


(vector? (~vector->immutable (~vector->immutable #()))) => #t
(~vector-immutable? (~vector->immutable (~vector->immutable #()))) => #t
(~vector-mutable? (~vector->immutable (~vector->immutable #()))) => #f

(vector? (~vector->mutable (~vector->mutable #()))) => #t
(~vector-immutable? (~vector->mutable (~vector->mutable #()))) => #f
(~vector-mutable? (~vector->mutable (~vector->mutable #()))) => #t




(define a (~vector->mutable #(10 11 12 13 14 15))) => #(10 11 12 13 14 15)
(define e (~vector->mutable #())) => #()
(define t (~vector->mutable #(0 0 0 0 0 0))) => #(0 0 0 0 0 0)
(define s #(0 1 2 3 4 5)) => #(0 1 2 3 4 5)




(vector-ref a 0) => 10
(vector-ref a 1) => 11
(vector-ref a 2) => 12

(vector-set! a 0 20) => 10
(vector-set! a 1 21) => 11
(vector-set! a 2 22) => 12

(vector-ref a 0) => 20
(vector-ref a 1) => 21
(vector-ref a 2) => 22

(vector-set! a 0 10) => 20
(vector-set! a 1 11) => 21
(vector-set! a 2 12) => 22




(values (~vector-reverse! a) a) => #values(#void #(15 14 13 12 11 10))
(values (~vector-reverse! a 2) a) => #values(#void #(15 14 10 11 12 13))
(values (~vector-reverse! a 1 3) a) => #values(#void #(15 10 14 11 12 13))
(values (~vector-reverse! a 2 6) a) => #values(#void #(15 10 13 12 11 14))




(values (vector-fill! a 0 1 3) a) => #values(#void #(15 0 0 12 11 14))
(values (vector-fill! a 0 4) a) => #values(#void #(15 0 0 12 0 0))
(values (vector-fill! a 1) a) => #values(#void #(1 1 1 1 1 1))
(values (vector-fill! a) a) => #values(#void #(#undefined #undefined #undefined #undefined #undefined #undefined))




(values (vector-copy! e 0 #()) e) => #values(#void #())
(values (vector-copy! e 0 #() 0) e) => #values(#void #())
(values (vector-copy! e 0 #() 0 0) e) => #values(#void #())

(values (vector-copy! t s) t) => #values(#void #(0 1 2 3 4 5))
(values (vector-fill! t 0) t) => #values(#void #(0 0 0 0 0 0))

(values (vector-copy! t 6 s 6) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 5 s 5) t) => #values(#void #(0 0 0 0 0 5))
(values (vector-copy! t 2 s 2) t) => #values(#void #(0 0 2 3 4 5))
(values (vector-copy! t 0 s 0) t) => #values(#void #(0 1 2 3 4 5))
(values (vector-fill! t 0) t) => #values(#void #(0 0 0 0 0 0))

(values (vector-copy! t 5 s 1 2) t) => #values(#void #(0 0 0 0 0 1))
(values (vector-copy! t 2 s 1 4) t) => #values(#void #(0 0 1 2 3 1))
(values (vector-fill! t 0) t) => #values(#void #(0 0 0 0 0 0))

(values (vector-copy! t 0 s 0 0) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 0 s 1 1) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 0 s 5 5) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 0 s 6 6) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 1 s 0 0) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 1 s 1 1) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 1 s 5 5) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 1 s 6 6) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 5 s 0 0) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 5 s 1 1) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 5 s 5 5) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 5 s 6 6) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 6 s 0 0) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 6 s 1 1) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 6 s 5 5) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-copy! t 6 s 6 6) t) => #values(#void #(0 0 0 0 0 0))
(values (vector-fill! t 0) t) => #values(#void #(0 0 0 0 0 0))


(values (vector-clear! t) t) => #values(#void #())

(values (vector-append! t s) t) => #values(#void #(0 1 2 3 4 5))
(values (vector-clear! t) t) => #values(#void #())

(values (vector-append! t s 6) t) => #values(#void #())
(values (vector-append! t s 5) t) => #values(#void #(5))
(values (vector-append! t s 2) t) => #values(#void #(5 2 3 4 5))
(values (vector-append! t s 0) t) => #values(#void #(5 2 3 4 5 0 1 2 3 4 5))
(values (vector-clear! t) t) => #values(#void #())

(values (vector-append! t 0 s 1 2) t) => #values(#void #(1))
(values (vector-append! t 1 s 1 4) t) => #values(#void #(1 1 2 3))
(values (vector-append! t 2 s 5 6) t) => #values(#void #(1 1 5 2 3))
(values (vector-clear! t) t) => #values(#void #())

